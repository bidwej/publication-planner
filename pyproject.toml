[tool.pylint]
extension-pkg-allow-list = ["cv2", "numpy", "dateutil"]
ignore = ["__pycache__"]

[tool.pylint.messages_control]
disable = [
  "invalid-name",
  "missing-module-docstring",
  "missing-function-docstring",
  "missing-class-docstring",
  "no-member",
  "unpacking-non-sequence",
  "multiple-statements",
  "redefined-outer-name",
  "broad-exception-caught",
  "unused-import",
  "import-outside-toplevel",
  "multiple-imports",
  "no-name-in-module",
  "import-error",
  "missing-final-newline",   # ignore C0304
  "trailing-whitespace",     # ignore C0303
  "attribute-defined-outside-init",  # ignore W0201 - allows inherited attributes
  "protected-access"         # ignore W0212 - allows access to protected methods
]



[tool.pylint.typecheck]
generated-members = [
  "cv2.*",
  "cv2.aruco.*"
]

# Better handling of inherited methods
ignored-modules = []
ignored-classes = []

[tool.pylint.format]
max-line-length = 250

[tool.pyright]
# stop errors about stub‐only or C‐extension modules
reportMissingModuleSource = false
reportMissingImports = false

# your existing venv and Python version settings
venvPath = "."
venv = ".venv"
pythonVersion = "3.12"

# if you need extra source roots:
# (Pyright will look here for modules before complaining)
analysis.extraPaths = ["src"]

# have Pyright/Pylance use library code for types
analysis.useLibraryCodeForTypes = true

# Better inheritance handling
analysis.autoImportCompletions = true
analysis.typeCheckingMode = "basic"
analysis.autoSearchPaths = true

# Ignore specific inheritance-related errors
reportUnknownMemberType = false
reportUnknownVariableType = false

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "-v --tb=short --timeout=15"
timeout = 15
